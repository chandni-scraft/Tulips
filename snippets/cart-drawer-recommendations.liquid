{% comment %}
  Renders "You may also like" recommendations in cart drawer
  Shows products from collections that cart items belong to
  Excludes specified collections: "Our Product", "All Product", "GST purpose collection"

  Usage:
  {%- render 'cart-drawer-recommendations' -%}
{% endcomment %}

{%- liquid
  assign excluded_collections = 'all-products,our-products,18-gst-tax-purposes-only,12-gst-collection-tax-purpose,5-gst-tax-purposes-only'
  assign excluded_collections_array = excluded_collections | split: ','
  assign max_products = 8
  assign cart_collections = ''
  assign recommended_products = ''
  assign cart_product_ids = cart.items | map: 'product_id'
-%}

{%- comment -%} Get all collections from cart items {%- endcomment -%}
{%- for item in cart.items -%}
  {%- for collection in item.product.collections -%}
    {%- unless excluded_collections_array contains collection.handle -%}
      {%- unless cart_collections contains collection.handle -%}
        {%- if cart_collections != blank -%}
          {%- assign cart_collections = cart_collections | append: ',' | append: collection.handle -%}
        {%- else -%}
          {%- assign cart_collections = collection.handle -%}
        {%- endif -%}
      {%- endunless -%}
    {%- endunless -%}
  {%- endfor -%}
{%- endfor -%}

{%- comment -%} Get products from these collections, excluding cart items {%- endcomment -%}
{%- if cart_collections != blank -%}
  <!-- DEBUG: Before split, cart_collections = "{{ cart_collections }}" -->
  {%- assign cart_collections_array = cart_collections | split: ',' -%}
  <!-- DEBUG: After split, array size = {{ cart_collections_array.size }} -->
  <!-- DEBUG: Array elements: {% for handle in cart_collections_array %}"{{ handle }}"{% unless forloop.last %}, {% endunless %}{% endfor %} -->
  {%- assign recommended_products = '' -%}
  {%- assign product_count = 0 -%}
  
  {%- for collection_handle in cart_collections_array -%}
    <!-- DEBUG: Loop iteration {{ forloop.index }}, handle = "{{ collection_handle }}" -->
    {%- assign collection = collections[collection_handle] -%}
    {%- if collection != blank -%}
      <!-- DEBUG: Processing collection {{ collection_handle }}, found: true -->
      {%- if product_count < max_products -%}
        <!-- DEBUG: Collection {{ collection_handle }} has {{ collection.products.size }} products -->
        {%- for product in collection.products -%}
          {%- if product_count < max_products -%}
            {%- unless cart_product_ids contains product.id -%}
              {%- unless recommended_products contains product.id -%}
                {%- assign recommended_products = recommended_products | append: product.id | append: ',' -%}
                {%- assign product_count = product_count | plus: 1 -%}
                <!-- DEBUG: Added product {{ product.title }} ({{ product.id }}) from {{ collection_handle }} -->
              {%- endunless -%}
            {%- endunless -%}
          {%- endif -%}
        {%- endfor -%}
      {%- endif -%}
    {%- else -%}
      <!-- DEBUG: Processing collection {{ collection_handle }}, found: false -->
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}

{%- comment -%} Debug information {%- endcomment -%}
{%- if cart.items.size > 0 -%}
  <!-- DEBUG: Cart has {{ cart.items.size }} items -->
  <!-- DEBUG: Excluded collections: {{ excluded_collections }} -->
  <!-- DEBUG: Cart collections found: {{ cart_collections }} -->
  <!-- DEBUG: Cart collections array: {{ cart_collections_array }} -->
  <!-- DEBUG: Recommended products: {{ recommended_products }} -->
  {%- for item in cart.items -%}
    <!-- DEBUG: Cart item {{ item.product.title }} collections: {% for collection in item.product.collections %}{{ collection.handle }}{% unless forloop.last %}, {% endunless %}{% endfor %} -->
  {%- endfor -%}
{%- endif -%}

{%- comment -%} Fallback: If no recommendations found, show some random products {%- endcomment -%}
{%- if recommended_products == blank and cart.items.size > 0 -%}
  {%- assign fallback_products = collections.all.products | where: 'available', true -%}
  {%- assign fallback_products = fallback_products | slice: 0, 4 -%}
  {%- if fallback_products.size > 0 -%}
    {%- assign products_array = fallback_products -%}
    <div class="cart-drawer__you-may-also-like">
      <div class="cart-drawer__you-may-also-like-header">
        <h3 class="cart-drawer__you-may-also-like-title h5">{{ 'cart.you_may_also_like' | t | default: 'You may also like' }}</h3>
      </div>
      
      <div class="cart-drawer__you-may-also-like-slider">
        <div class="swiper cart-drawer__swiper-you-may-also-like">
          <div class="swiper-wrapper">
            {%- for product in products_array -%}
              <div class="swiper-slide">
                <div class="cart-drawer__recommendation-item">
                  <!-- DEBUG: Product {{ product.title }} - featured_image: {{ product.featured_image != blank }}, images: {{ product.images.size }} -->
                  {%- assign product_image = product.featured_image | default: product.images.first -%}
                  {%- if product_image != blank -%}
                    <div class="card-product-small">
                      <a href="{{ product.url }}" class="card-product-small">
                        <div class="media card-product-small-media">
                          {%- render 'image', image: product_image, alt: product_image.alt | escape -%}
                        </div>
                        <div class="card-product-small-details">
                          <h6 class="card-product-small-title">{{ product.title | escape }}</h6>
                          <p class="card-product-small-price">
                            {%- if product.compare_at_price_min > product.price_min -%}
                              <del>{{ product.compare_at_price_min | money }}</del>
                              <ins>{{ product.price_min | money }}</ins>
                            {%- else -%}
                              {{ product.price_min | money }}
                            {%- endif -%}
                          </p>
                          {%- if settings.product_card_enable_quick_add_to_cart_button -%}
                            <button type="button" class="quick-cart-drawer__trigger quick-cart-drawer__trigger--recommendations button button--filled" aria-expanded="false" onclick="preventDefault(event)" aria-controls="quick-cart-drawer" data-product-url="{{ product.handle | prepend: '/products/' }}">
                              {{ "cart.quick_add" | t }}
                              <div class="quick-cart-drawer__trigger--loading">
                                {%- render 'loading-spinner' -%}
                              </div>
                            </button>
                          {%- endif -%}
                        </div>
                      </a>
                    </div>
                  {%- else -%}
                    <!-- DEBUG: Product {{ product.title }} has no images at all -->
                    <div class="card-product-small">
                      <div class="media card-product-small-media">
                        <div class="placeholder-image" style="width: 100%; height: 100%; background: #f0f0f0; display: flex; align-items: center; justify-content: center; font-size: 0.8rem; color: #666; border-radius: 4px;">No Image</div>
                      </div>
                      <div class="card-product-small-details">
                        <h6 class="card-product-small-title">{{ product.title | escape }}</h6>
                        <p class="card-product-small-price">{{ product.price_min | money }}</p>
                      </div>
                    </div>
                  {%- endif -%}
                </div>
              </div>
            {%- endfor -%}
          </div>
        </div>
      </div>
    </div>
    <style>
      .cart-drawer__you-may-also-like {
        margin-top: 1.5rem;
        padding-top: 1.5rem;
        border-top: 1px solid rgba(var(--color-foreground), 0.1);
      }
      
      .cart-drawer__you-may-also-like-header {
        margin-bottom: 1rem;
      }
      
      .cart-drawer__you-may-also-like-title {
        margin: 0;
        font-weight: 600;
      }
      
      .cart-drawer__you-may-also-like-slider {
        overflow: hidden;
      }
      
      .cart-drawer__swiper-you-may-also-like {
        overflow: visible;
      }
      
      .cart-drawer__recommendation-item {
        width: 100%;
      }
      
      .cart-drawer__you-may-also-like .swiper-slide {
        width: 140px;
        flex-shrink: 0;
      }
      
      .cart-drawer__you-may-also-like .product-card {
        border: 1px solid rgba(var(--color-foreground), 0.1);
        border-radius: 8px;
        padding: 0.75rem;
        height: 100%;
        display: flex;
        flex-direction: column;
      }
      
      .cart-drawer__you-may-also-like .product-card__media {
        aspect-ratio: 1;
        margin-bottom: 0.5rem;
      }
      
      .cart-drawer__you-may-also-like .product-card__title {
        font-size: 0.875rem;
        line-height: 1.3;
        margin-bottom: 0.25rem;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
      }
      
      .cart-drawer__you-may-also-like .product-card__price {
        font-size: 0.8rem;
        font-weight: 600;
        margin-top: auto;
      }
      
      .cart-drawer__you-may-also-like .product-card__button {
        display: none;
      }
      
      @media screen and (max-width: 750px) {
        .cart-drawer__you-may-also-like .swiper-slide {
          width: 120px;
        }
      }
    </style>

    <script>
      document.addEventListener('DOMContentLoaded', function() {
        if (typeof Swiper !== 'undefined') {
          new Swiper('.cart-drawer__swiper-you-may-also-like', {
            slidesPerView: 'auto',
            spaceBetween: 12,
            freeMode: true,
            grabCursor: true,
            breakpoints: {
              750: {
                spaceBetween: 16,
              }
            }
          });
        }
      });
    </script>
  {%- endif -%}
{%- elsif recommended_products != blank -%}
  {%- comment -%} Get products directly from collections instead of using IDs {%- endcomment -%}
  {%- assign products_to_show = '' -%}
  {%- assign product_count = 0 -%}
  
  {%- for collection_handle in cart_collections_array -%}
    {%- if product_count < max_products -%}
      {%- assign collection = collections[collection_handle] -%}
      {%- if collection != blank -%}
        {%- for product in collection.products -%}
          {%- if product_count < max_products -%}
            {%- unless cart_product_ids contains product.id -%}
              {%- unless products_to_show contains product.id -%}
                {%- assign products_to_show = products_to_show | append: product | append: ',' -%}
                {%- assign product_count = product_count | plus: 1 -%}
                <!-- DEBUG: Added product {{ product.title }} from {{ collection_handle }} -->
              {%- endunless -%}
            {%- endunless -%}
          {%- endif -%}
        {%- endfor -%}
      {%- endif -%}
    {%- endif -%}
  {%- endfor -%}
  
  <!-- DEBUG: products_to_show = "{{ products_to_show }}" -->
  {%- if products_to_show != blank -%}
    {%- assign products_array = products_to_show | split: ',' -%}
    <!-- DEBUG: products_array size = {{ products_array.size }} -->
    
    <div class="cart-drawer__you-may-also-like">
      <div class="cart-drawer__you-may-also-like-header">
        <h3 class="cart-drawer__you-may-also-like-title h5">{{ 'cart.you_may_also_like' | t | default: 'You may also like' }}</h3>
      </div>
      
      <div class="cart-drawer__you-may-also-like-slider">
        <div class="swiper cart-drawer__swiper-you-may-also-like">
          <div class="swiper-wrapper">
            {%- for product in products_array -%}
              {%- if product != blank -%}
                <div class="swiper-slide">
                  <div class="cart-drawer__recommendation-item">
                    <!-- DEBUG: Product {{ product.title }} - featured_image: {{ product.featured_image != blank }}, images: {{ product.images.size }} -->
                    {%- assign product_image = product.featured_image | default: product.images.first -%}
                    {%- if product_image != blank -%}
                      <div class="card-product-small">
                        <a href="{{ product.url }}" class="card-product-small">
                          <div class="media card-product-small-media">
                            {%- render 'image', image: product_image, alt: product_image.alt | escape -%}
                          </div>
                          <div class="card-product-small-details">
                            <h6 class="card-product-small-title">{{ product.title | escape }}</h6>
                            <p class="card-product-small-price">
                              {%- if product.compare_at_price_min > product.price_min -%}
                                <del>{{ product.compare_at_price_min | money }}</del>
                                <ins>{{ product.price_min | money }}</ins>
                              {%- else -%}
                                {{ product.price_min | money }}
                              {%- endif -%}
                            </p>
                            {%- if settings.product_card_enable_quick_add_to_cart_button -%}
                              <button type="button" class="quick-cart-drawer__trigger quick-cart-drawer__trigger--recommendations button button--filled" aria-expanded="false" onclick="preventDefault(event)" aria-controls="quick-cart-drawer" data-product-url="{{ product.handle | prepend: '/products/' }}">
                                {{ "cart.quick_add" | t }}
                                <div class="quick-cart-drawer__trigger--loading">
                                  {%- render 'loading-spinner' -%}
                                </div>
                              </button>
                            {%- endif -%}
                          </div>
                        </a>
                      </div>
                    {%- else -%}
                      <!-- DEBUG: Product {{ product.title }} has no images at all -->
                      <div class="card-product-small">
                        <div class="media card-product-small-media">
                          <div class="placeholder-image" style="width: 100%; height: 100%; background: #f0f0f0; display: flex; align-items: center; justify-content: center; font-size: 0.8rem; color: #666; border-radius: 4px;">No Image</div>
                        </div>
                        <div class="card-product-small-details">
                          <h6 class="card-product-small-title">{{ product.title | escape }}</h6>
                          <p class="card-product-small-price">{{ product.price_min | money }}</p>
                        </div>
                      </div>
                    {%- endif -%}
                  </div>
                </div>
              {%- endif -%}
            {%- endfor -%}
          </div>
        </div>
      </div>
    </div>

    <style>
      .cart-drawer__you-may-also-like {
        margin-top: 1.5rem;
        padding-top: 1.5rem;
        border-top: 1px solid rgba(var(--color-foreground), 0.1);
      }
      
      .cart-drawer__you-may-also-like-header {
        margin-bottom: 1rem;
      }
      
      .cart-drawer__you-may-also-like-title {
        margin: 0;
        font-weight: 600;
      }
      
      .cart-drawer__you-may-also-like-slider {
        overflow: hidden;
      }
      
      .cart-drawer__swiper-you-may-also-like {
        overflow: visible;
      }
      
      .cart-drawer__recommendation-item {
        width: 100%;
      }
      
      .cart-drawer__you-may-also-like .swiper-slide {
        width: 140px;
        flex-shrink: 0;
      }
      
      .cart-drawer__you-may-also-like .product-card {
        border: 1px solid rgba(var(--color-foreground), 0.1);
        border-radius: 8px;
        padding: 0.75rem;
        height: 100%;
        display: flex;
        flex-direction: column;
      }
      
      .cart-drawer__you-may-also-like .product-card__media {
        aspect-ratio: 1;
        margin-bottom: 0.5rem;
      }
      
      .cart-drawer__you-may-also-like .product-card__title {
        font-size: 0.875rem;
        line-height: 1.3;
        margin-bottom: 0.25rem;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
      }
      
      .cart-drawer__you-may-also-like .product-card__price {
        font-size: 0.8rem;
        font-weight: 600;
        margin-top: auto;
      }
      
      .cart-drawer__you-may-also-like .product-card__button {
        display: none;
      }
      
      @media screen and (max-width: 750px) {
        .cart-drawer__you-may-also-like .swiper-slide {
          width: 120px;
        }
      }
    </style>

    <script>
      document.addEventListener('DOMContentLoaded', function() {
        if (typeof Swiper !== 'undefined') {
          new Swiper('.cart-drawer__swiper-you-may-also-like', {
            slidesPerView: 'auto',
            spaceBetween: 12,
            freeMode: true,
            grabCursor: true,
            breakpoints: {
              750: {
                spaceBetween: 16,
              }
            }
          });
        }
      });
    </script>
  {%- endif -%}
{%- endif -%}
